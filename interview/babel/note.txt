//ES2015转码规则
npm install --save-dev babel-preset-es2015

//react转码规则
npm install --save-dev babel-preset-react

//ES7不同阶段语法天的转码规则（共有4个阶段），选装一个
npm install --save-dev babel-preset-stage-0
npm install --save-dev babel-preset-stage-1
npm install --save-dev babel-preset-stage-2
npm install --save-dev babel-preset-stage-3

所有Babel工具和模块的使用，都必须先写好.babelrc

Babel提供babel-cli工具，用于命令行转码
npm install --global babel-cli

//转码结果输出到标准输出
babel example.js

//转码结果写入一个文件 --out-file -o
babel example.js --out-file compiled.js
或者
babel example.js -o compiled.js

整个目录转码 --out-dir 或-d
babel src --out-dir lib
或
babel src -d lib

-s参数生成source map文件
babel src -d lib -s

babel-cli工具自带一个babel-node命令，提供一个支持ES6的REPL环境。它支持Node的REPL环境的所有功能，而且可以直接运行ES6代码
它不用单独安装，而是随babel-cli一起安装。然后执行babel-node就进入PEPL环境

babel-register
babel-register模块改写require命令，为它加上一个钩子，此后，每当require加载.js,.jsx,.es和.es6后缀名的文件，就会先用Babel进行转码
npm install --save-dev babel-register

使用时，必须首先加载babel-register
require("babel-register")
require("./index.js)
然后就不需要手动对index.js转码了
babel-register只会对require命令加载对文件转码，而不会对当前文件转码。另外，由于它时实时转码，所以只适合只开发环境使用。

babel-core
如果某些代码需要调用Babel的API进行转码，就要使用babel-core模块
npm install babel-core --save

var babel=require("babel-core);

//字符串转码
babel.transform("code();",options);
//=>{code,map,ast}

//文件转码(异步)
babel.transformFile("filename.js",options,function(err,result){
    result://=>{code,map,ast}
})
//文件转码(同步)
babel.transformFileSync("filename.js",options);
//=>{code,map,ast}

//babel ast转码
babel.transformFromAst(ast,code,options);
//=>{code,map,ast}

ESLint用于静态检查代码的语法和风格
npm install --save-dev eslint babel-eslint
在项目根目录下，新建一个配置文件 .eslint，在其中加入parser字段
{
    "parser":"babel-eslint",
    "rules":{
        ...
    }
}
再在package.json中，加入相应的scripts脚本
{
    "name":"my-module",
    "scripts":{
        "lint":"eslint my-files.js"
    },
    "devDependencies":{
        "babel-eslint":"...",
        "eslint":"..."
    }
}

Mocha是一个测试框架，如果需要执行ES6语法的测试脚本，可以修改package.json的scripts.test
"scripts":{
    "test":"mocha --ui qunit --compilers js:babel-core/resiger"
}
--compilers参数指定脚本的转码器，规定后缀名为js的文件，都需要使用babel-core/register先转码
